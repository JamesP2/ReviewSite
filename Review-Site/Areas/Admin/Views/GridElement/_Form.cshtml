@model Review_Site.Models.GridElement
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    if (ViewBag.IDField == true)
    {
        @Html.HiddenFor(model => model.ID)
    }
        <ul class="nav nav-tabs" id="formTabs">
            <li class="active"><a href="#basic" data-toggle="tab">Basic</a></li>
            <li><a href="#visual-styling" data-toggle="tab">Visual Styling</a></li>
            <li><a href="#position" data-toggle="tab">Position</a></li>
            <li><a href="#advanced" data-toggle="tab">Advanced</a></li>
        </ul>
    
        <div class="tab-content">
            <div class="tab-pane active" id="basic">
                <div class="editor-label">
                    @Html.LabelFor(model => model.GridID, "Parent Grid")
                </div>
                <div class="editor-field">
                    @Html.DropDownList("GridID", String.Empty)
                    @Html.ValidationMessageFor(model => model.GridID)
                </div>
                <div class="editor-label">
                    <p>Selected Article: <span id="selectedArticle">@((Model == null || Model.Article == null) ? "None" : Model.Article.Title)</span></p>
                    <a class="btn" href="#" onclick="openArticleSelector()">Select Article</a>
                </div>
                <div class="editor-field">
                    @Html.HiddenFor(model => model.ArticleID)
                    @Html.ValidationMessageFor(model => model.ArticleID, "You must select an article.")
                </div>
            </div>
            <div class="tab-pane" id="visual-styling">
                <div class="editor-label">
                    @Html.LabelFor(model => model.BorderColorID, "Border Colour")
                </div>
                <div class="editor-field">
                    @Html.DropDownList("BorderColorID")
                    @Html.ValidationMessageFor(model => model.BorderColorID)
                </div>
                <div class="editor-label">
                    <p>Selected Image: <span id="selectedImage">@((Model == null || Model.Image == null || Model.Image.Title == null) ? "None" : Model.Image.Title)</span></p>
                    <a class="btn" href="#" onclick="openResourceSelector()">Select Image</a>
                </div>
                <div class="editor-field">
                    @Html.HiddenFor(model => model.ImageID)
                    @Html.ValidationMessageFor(model => model.ImageID, "You must select an image to use.")
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.HeadingClass, "Heading Position")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.HeadingClass, (SelectList)ViewBag.HeadingClass)
                    @Html.ValidationMessageFor(model => model.HeadingClass)
                </div>

                <div class="editor-label">
                    @Html.LabelFor(model => model.InverseHeading, "Inverse Heading (White text on black background)?")
                </div>
                <div class="editor-field">
                    @Html.CheckBoxFor(model => model.InverseHeading)
                    @Html.ValidationMessageFor(model => model.InverseHeading)
                </div>
            </div>
            <div class="tab-pane" id="position">
                <div class="editor-label">
                    @Html.LabelFor(model => model.SizeClass, "Height")
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.SizeClass, (SelectList)ViewBag.SizeClass)
                    @Html.ValidationMessageFor(model => model.SizeClass)
                </div>
                <div class="editor-label">
                    @Html.LabelFor(model => model.Width)
                </div>
                <div class="editor-field">
                    @Html.DropDownListFor(model => model.Width, (SelectList)ViewBag.Width)
                    @Html.ValidationMessageFor(model => model.Width)
                </div>
            </div>
            <div class="tab-pane" id="advanced">
                <div class="editor-label">
                @Html.LabelFor(model => model.HeadingText, "Custom Heading Text (No More Than 150 Characters)")
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.HeadingText, new { maxlength = 150 })
                    @Html.ValidationMessageFor(model => model.HeadingText)
                </div>
                @Html.Hidden("UseHeadingText", "false")
            </div>
        </div>
        <p>&nbsp;</p>
        <p>
            <input type="submit" class="btn btn-primary" value="@((ViewBag.ButtonText != null) ? @ViewBag.ButtonText : "Save")" />
        </p>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script type="text/javascript">
    function openArticleSelector() {
        window.open("@Url.Action("MiniBrowser", "Article")", 'Select Article', 'height=500,width=700');
    }

    function openResourceSelector(){
        window.open("@Url.Action("MiniBrowser", "Resource", new{ filter = "image" })", 'Select Article', 'height=500,width=700');
    }

    function setArticle(id, title){
        $("#selectedArticle").html(title);
        $("[name='ArticleID']").val(id);
    }

    function setResource(id, title){
        $("#selectedImage").html(title);
        $("[name='ImageID']").val(id);
    }

    $("form").submit(function(){
        //If we're using custom heading text, set the hidden field to true
        if($("[name='HeadingText']").val() != ""){
            $("[name='UseHeadingText']").val("true");
        }else{
            $("[name='UseHeadingText']").val("false");
        }
        return true;
    });
</script>
