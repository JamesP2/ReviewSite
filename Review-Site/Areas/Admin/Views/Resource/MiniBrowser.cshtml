@model IEnumerable<Review_Site.Models.Resource>
@{
    Layout = "~/Views/Shared/_AdminLayoutBare.cshtml";
    ViewBag.Title = "Resource Browser";
}

<h3>Select a Resource</h3>

<p>
    @Html.ActionLink("Upload", "MiniUpload")
</p>
<table class="table table-striped table-bordered table-condensed">
    <tr>
        <th>
            Title
        </th>
        <th>
            Type
        </th>
        <th>
            Date Added
        </th>
        <th></th>
    </tr>

@foreach (var item in Model)
{
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Title)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Type)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DateAdded)
        </td>
        <td>
            <a href="#" onclick="setUploadAndClose('@item.ID.ToString()', '@item.Title')">Select</a> |
            @Html.ActionLink("View", "GetResource", new { controller = "Core", area = "", id = item.ID }, new { target = "_blank" })
        </td>
    </tr>
}

@if (!Model.Any())
{
    <tr>
        <td colspan="4" style="text-align: center"><strong>There is nothing here.</strong></td>
    </tr>
}

</table>

<script type="text/javascript">
    // Helper function to get parameters from the query string.
    function getUrlParam(paramName) {
        var reParam = new RegExp('(?:[\?&]|&amp;)' + paramName + '=([^&]+)', 'i');
        var match = window.location.search.match(reParam);

        return (match && match.length > 1) ? match[1] : '';
    }
    var funcNum = getUrlParam('CKEditorFuncNum');

    function setUploadAndClose(id, title) {
        @{
            if(ViewBag.CKEditor == true){
            @:window.opener.CKEDITOR.tools.callFunction(funcNum, '@Url.Action("GetResource", new { controller = "Core", area = "" })/' + id);
            }
            else{
            @:window.opener.setResource(id, title);
            }
            @:window.close();
        }
    }
</script>
